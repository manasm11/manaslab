snippet packmain
        package main

        import (
                "${1:fmt}"$2
        )

        func main() {
                fmt.Println("${3}started...")
                $4
        }

snippet func
        func ${1:main}($2) $3 {
                $5
                return ${4:nil}
        }

snippet map
        map[$1]$2

snippet typestruct
        type $1 struct {$2}

snippet switch
        switch $1 {
        case $2:
                $3
        }

snippet iferr
        if ${1:err} != nil {
                ${2:return err}
        }

snippet teamodel
        type ${1:model} struct {$2}

        func (m ${1:model}) Init() tea.Cmd {
                return ${3:nil}
        }

        func (m ${1:model}) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
                switch msg := msg.(type) {
                case tea.KeyMsg:
                        switch msg.String() {
                        case "ctrl+c":
                                return m, tea.Quit
                        }
                }
                return m, ${4:nil}
        }

        func (m ${1:model}) View() string {
                return ${5:""}
        }

snippet teamain
        func main() {
                f, err := tea.LogToFile("debug.log", "debug")
                if err != nil {
                        log.Fatalf("err: %v", err)
                }
                defer f.Close()
                p := tea.NewProgram(${1:model{}}${2:, tea.WithAltScreen()})
                if _, err := p.Run(); err != nil {
                        log.Fatal(err)
                }
        }
